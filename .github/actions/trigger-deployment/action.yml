name: 'Trigger Deployment'
description: 'Triggers deployment to specified stage'
inputs:
  stage:
    description: 'Deployment stage (e.g., staging, prod)'
    required: true
  version:
    description: 'Version to deploy'
    required: false
  image:
    description: 'Docker image to deploy'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Generate GitHub App Token
      id: generate-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ secrets.RECALL_WORKFLOW_TRIGGER_APP_ID }}
        private-key: ${{ secrets.RECALL_WORKFLOW_TRIGGER_PRIVATE_KEY }}
        owner: ${{ github.repository_owner }}
        repositories: competition-app-deployments

    - name: Trigger deployment
      uses: actions/github-script@v7
      with:
        github-token: ${{ steps.generate-token.outputs.token }}
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: 'competition-app-deployments',
            workflow_id: 'update-docker-image.yml',
            ref: 'main',
            inputs: {
              stage: '${{ inputs.stage }}',
              version: '${{ inputs.version }}',
              image: '${{ inputs.image }}',
            }
          });
